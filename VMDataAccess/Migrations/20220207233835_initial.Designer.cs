// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VMDataAccess;

namespace VMDataAccess.Migrations
{
    [DbContext(typeof(VMDBContext))]
    [Migration("20220207233835_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("VMEntities.VMDBEntities.AuthRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long>("AuthorityId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("AuthorityId");

                    b.HasIndex("RoleId");

                    b.ToTable("AuthRoles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            AuthorityId = 1L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            AuthorityId = 2L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            AuthorityId = 3L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            AuthorityId = 4L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            AuthorityId = 5L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            Active = true,
                            AuthorityId = 6L,
                            RoleId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            Active = true,
                            AuthorityId = 1L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 8L,
                            Active = true,
                            AuthorityId = 2L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 9L,
                            Active = true,
                            AuthorityId = 3L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 10L,
                            Active = true,
                            AuthorityId = 4L,
                            RoleId = 2L
                        },
                        new
                        {
                            Id = 11L,
                            Active = true,
                            AuthorityId = 5L,
                            RoleId = 3L
                        },
                        new
                        {
                            Id = 12L,
                            Active = true,
                            AuthorityId = 6L,
                            RoleId = 4L
                        },
                        new
                        {
                            Id = 13L,
                            Active = true,
                            AuthorityId = 4L,
                            RoleId = 5L
                        },
                        new
                        {
                            Id = 14L,
                            Active = true,
                            AuthorityId = 5L,
                            RoleId = 5L
                        },
                        new
                        {
                            Id = 15L,
                            Active = true,
                            AuthorityId = 6L,
                            RoleId = 5L
                        });
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Authority", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Authorities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Name = "Vehicle Insert Authority"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Name = "Vehicle Update Authority"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Name = "Vehicle Delete Authority"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            Name = "Vehicle List Authority"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            Name = "Brand List Authority"
                        },
                        new
                        {
                            Id = 6L,
                            Active = true,
                            Name = "Model List Authority"
                        });
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Brand", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Name = "Bmw"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Name = "Toyota"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Name = "Fiat"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            Name = "Opel"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            Name = "Audi"
                        });
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Name = "White"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Name = "Red"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Name = "Night Blue"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            Name = "Black"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            Name = "Space Grey"
                        });
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Model", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            BrandId = 2L,
                            Name = "Yaris"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            BrandId = 2L,
                            Name = "Rav 4"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            BrandId = 1L,
                            Name = "x5"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            BrandId = 4L,
                            Name = "Corsa"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            BrandId = 2L,
                            Name = "Corolla"
                        });
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            Name = "SystemAdministrator"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            Name = "VehicleAdministrator"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            Name = "BrandAdministrator"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            Name = "ModelAdministrator"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("EMail")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            EMail = "okankaan.cetinkaya@gmail.com",
                            Name = "Okan Kaan Cetinkaya",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            EMail = "maria.anders@test.com",
                            Name = "Maria Anders",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            EMail = "antonio.moreno@test.com",
                            Name = "Antonio Moreno Taquería",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            EMail = "sven.ottlieb@test.com",
                            Name = "Sven Ottlieb",
                            Password = "1234"
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            EMail = "carine.schmitt@test.com",
                            Name = "Carine Schmitt",
                            Password = "1234"
                        });
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.UserRole", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            RoleId = 1L,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            RoleId = 2L,
                            UserId = 2L
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            RoleId = 3L,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            RoleId = 4L,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            RoleId = 5L,
                            UserId = 5L
                        });
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Vehicle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<long>("ColorId")
                        .HasColumnType("bigint");

                    b.Property<long>("ModelId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ColorId");

                    b.HasIndex("ModelId");

                    b.HasIndex("UserId");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Active = true,
                            ColorId = 2L,
                            ModelId = 2L,
                            Price = 200000m,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Active = true,
                            ColorId = 5L,
                            ModelId = 1L,
                            Price = 150000m,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Active = true,
                            ColorId = 4L,
                            ModelId = 3L,
                            Price = 230000m,
                            UserId = 5L
                        },
                        new
                        {
                            Id = 4L,
                            Active = true,
                            ColorId = 2L,
                            ModelId = 4L,
                            Price = 500000m,
                            UserId = 4L
                        },
                        new
                        {
                            Id = 5L,
                            Active = true,
                            ColorId = 2L,
                            ModelId = 2L,
                            Price = 200000m,
                            UserId = 3L
                        },
                        new
                        {
                            Id = 6L,
                            Active = true,
                            ColorId = 3L,
                            ModelId = 5L,
                            Price = 300000m,
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.AuthRole", b =>
                {
                    b.HasOne("VMEntities.VMDBEntities.Authority", "Authority")
                        .WithMany("AuthRoles")
                        .HasForeignKey("AuthorityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMEntities.VMDBEntities.Role", "Role")
                        .WithMany("AuthRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Authority");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Model", b =>
                {
                    b.HasOne("VMEntities.VMDBEntities.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.UserRole", b =>
                {
                    b.HasOne("VMEntities.VMDBEntities.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMEntities.VMDBEntities.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Vehicle", b =>
                {
                    b.HasOne("VMEntities.VMDBEntities.Color", "Color")
                        .WithMany("Vehicles")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMEntities.VMDBEntities.Model", "Model")
                        .WithMany("Vehicles")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VMEntities.VMDBEntities.User", "User")
                        .WithMany("Vehicles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Model");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Authority", b =>
                {
                    b.Navigation("AuthRoles");
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Color", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Model", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.Role", b =>
                {
                    b.Navigation("AuthRoles");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("VMEntities.VMDBEntities.User", b =>
                {
                    b.Navigation("UserRoles");

                    b.Navigation("Vehicles");
                });
#pragma warning restore 612, 618
        }
    }
}
